{
  "hash": "129897415ccfd23cfacb53220f8ec7d3",
  "result": {
    "engine": "knitr",
    "markdown": "::: {.cell}\n\n:::\n\n\n\n\n\n\n### Maps\n\nggplot2 makes it easy to plot maps with [simple features](https://en.wikipedia.org/wiki/Simple_Features) data through `geom_sf()`. SF maps can be directly accessed through e.g.:\n* [rnaturalearth](https://github.com/ropensci/rnaturalearth): R interface for the [Natural earth dataset](https://www.naturalearthdata.com/)\n* [GiscoR](https://ropengov.github.io/giscoR/): R interface/API for [Eurostat GISCO](https://ec.europa.eu/eurostat/web/gisco)\n\nOtherwise, the R package [sf](https://r-spatial.github.io/sf/) contains tools for working with of SF data and also converting some data types to SF (see https://r-spatial.github.io/sf/articles/sf2.html).\n\n\nIn these examples we will use `rnaturalearth` to obtain map data and join it with other data.\n\n:::panel-tabset\n\n\n#### Africa\nContinents or countries can be obtained separately with `rnaturalearth` and, depending on the continent, used as is. Here the map data from Africa is obtained and joined with data from the [gapminder data set](https://github.com/jennybc/gapminder).\n\nBoth data sets support the [ISO 3166-1 alpha-3](https://www.iso.org/iso-3166-country-codes.html) naming standard and can as a result easily be combined. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rnaturalearth)\nlibrary(gapminder) # Data used in the example\nafr_map <- ne_countries(continent = \"Africa\") |> \n  select(iso_a3)\n\n\ngapm <- gapminder |> \n  filter(year==2007 & continent == \"Africa\") |>\n  left_join(country_codes) |> \n  select(iso_alpha, lifeExp)\n\n\nafr_map  |> \n  left_join(gapm, by=join_by(iso_a3 == iso_alpha)) |> \n  ggplot(aes(fill=lifeExp)) +\n  geom_sf() +\n  labs(title = \"Life expectancy 2007\", fill = \"Years\")\n```\n\n::: {.cell-output-display}\n![](ggplot2_maps_files/figure-html/map-selection-1.png)\n:::\n:::\n\n\n\n\n\n#### Europe\n\nGiven that some countries in Europe have overseas territory, e.g. Guadeloupe and the Falkland islands, a map of the continent might need coordinate adjustments. Here we adjust the longitude and latitude displayed through `coord_sf()` and do not filter out non-European landmasses.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(getwd())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"D:/Programming/Plot-quick-ref/ggplot2_quick_ref\"\n```\n\n\n:::\n\n```{.r .cell-code}\nworld_map <- ne_countries(scale = \"medium\") |> \n  select(name) \n# eu_gdppc <- read.csv(\"../data/eu_gdppc_proc.csv\") # Data from Eurostat\n# \n# \n# world_map |>\n#   left_join(eu_gdppc, by=join_by(name == geo)) |> \n#   filter(name != \"Denmark\") |> \n#   \n#     ggplot(aes(fill = X2024)) +\n#     geom_sf() +\n#     coord_sf(xlim=c(-25, 37), ylim=c(30, 70)) +\n#     labs(fill = \"\", title = \"GDP per capita 2024\") +\n#     scale_fill_distiller(palette = \"OrRd\", direction=1)\n```\n:::\n\n\n\n\n\n#### Point maps\nFor point or bubble maps either `geom_point()` or `geom_sf()` can be used depending on the data used. Here the `sf` package is used to calculate centroids of the countries and `geom_sf()` to plot them. Points are also manually inserted and added to the plot to show `geom_point()` functionality.\nNote that these points represent latitude and longitude in the default projection.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Spherical geometry needs to be turned off for calculating centroids for this data set\nsf::sf_use_s2(FALSE) \nafr_map <- ne_countries(continent = \"Africa\") |> \n  select(iso_a3) |> \n  mutate(centroid = sf::st_centroid(geometry))\nsf::sf_use_s2(TRUE)\n\ngapm <- gapminder |> \n  filter(year==2007 & continent == \"Africa\") |>\n  left_join(country_codes) |> \n  select(iso_alpha, lifeExp)\n\nmypoints <- data.frame(x=c(50, 45, 44, 45, 46, 47, 48, 49, 50, 51), \n                       y=c(30, 30, 25, 24, 23.2, 23, 23, 23.2, 24, 25))\n\nafr_map  |> \n  left_join(gapm, by=join_by(iso_a3 == iso_alpha)) |> \n  ggplot() +\n  geom_sf() +\n  # Centroids are added to the plot\n  geom_sf(aes(geometry = centroid, color=lifeExp), alpha=0.8, size = 5) + \n  # Manual points are added to the plot\n  geom_point(data = mypoints, aes(x, y)) +\n  labs(title = \"Life expectancy 2007\", color=\"Years\", x=\"\", y=\"\")\n```\n\n::: {.cell-output-display}\n![](ggplot2_maps_files/figure-html/map-points-1.png)\n:::\n:::\n\n\n\n\n#### Projections\nI do not currently possess the knowledge of the framework to go into depth, however, coordinate reference systems (CRS) of the map can be changed. Here is a very simple example using the EPSG:3035 CRS.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neur_map <- ne_countries() |> \n  select(name)\n\nggplot(eur_map) +\n  geom_sf() +\n  coord_sf(crs = sf::st_crs(\"epsg:3035\"))\n```\n\n::: {.cell-output-display}\n![](ggplot2_maps_files/figure-html/map-CRS-1.png)\n:::\n:::\n\n\n\n\n\n\n\n:::\n",
    "supporting": [
      "ggplot2_maps_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}